apply plugin: 'com.android.application'



/*ext {
    hashSaltKeyForQA = "6793d153-13fc74d9c28"
    hashSaltKeyForProduction = ""

}*/
android {

    def getStoreFile = { ->

        def code = project.hasProperty('storeFile') ? storeFile : "sdfdsf"
        println "storeFile is set to $code"
        return code
    }

    def getkeypass = { ->

        def code = project.hasProperty('keyPassword') ? keyPassword : "dsafsd"
        println "keyPassword is set to $code"
        return code
    }

    def getKeyAlias = { ->

        def code = project.hasProperty('keyAlias') ? keyAlias : "dsfasd"
        println "keyAlias is set to $code"
        return code
    }
    signingConfigs {
        release {
            keyAlias getKeyAlias()
            keyPassword getkeypass()
            storeFile file('/home/yml/Documents/android-poc/droidpro/BarcodeScanner/app/deploytestkeystore.jks')
            storePassword 'admin123'
        }
    }


    def getVersionCode = { ->

        def code = project.hasProperty('versionCode') ? versionCode.toInteger() : -1
        println "VersionCode is set to $code"
        return code
    }
    def getMyVersionName = { ->
        def name = project.hasProperty('versionName') ? versionName : "1.0"
        println "VersionName is set to $name"
        return name
    }
    def getHashSalt = { ->
        def hashsalt = project.hasProperty('hashSalt') ? hashSalt : "w23445"
        println "hashSalt is set to $hashsalt"
        return name
    }
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.droidpro.barcodescanner"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 32
        versionName "3.3"
        resValue "string", "hash_salt_key_qa", getHashSalt()

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        println "before teamcity variable setting"
        if (project.hasProperty("teamcity")) {
            println "after teamcity variable setting"
            teamcity.each { key, val ->
                //println "##tc-property name='${key}' value='${val}'"
                if ("${key}" == "gs.versionCode") {
                    println "after teamcity variable version code setting"

                    versionCode = Integer.parseInt("${val}")
                }
                if ("${key}" == "gs.versionName") {
                    println "after teamcity variable version name setting"

                    versionName = "${val}"
                }
                if ("${key}" == "gs.hashSalt") {
                    println "after teamcity variable hashsalt setting"

                    resValue "string", "hash_salt_key_qa", "${val}"
                    resValue "string", "hash_salt_key_prod", "${val}"
                }
            }
        }
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "default"
    productFlavors {
        beta {

        }
        prod {

        }
        preProd {

        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.google.android.gms:play-services:11.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
